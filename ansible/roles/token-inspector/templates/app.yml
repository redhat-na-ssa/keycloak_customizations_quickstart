---

kind: List
apiVersion: v1
items:

- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: {{ application_name }}
    name: {{ application_name }}
  spec:
    port:
      targetPort: http
    tls:
      termination: edge
    to:
      kind: Service
      name: {{ application_name }}
    wildcardPolicy: None

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: {{ application_name }}
      monitoring: prometheus
      expose: "true"
    name: {{ application_name }}
  spec:
    ports:
      - name: http
        port: 8080
        protocol: TCP
        targetPort: 8000
    selector:
      group: oidc 
      app: {{ application_name }}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: {{ application_name }}
    name: {{ application_name }}
  spec:
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      group: oidc
      app: {{ application_name }}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 3600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          group: oidc
          app: {{ application_name }}
      spec:
        containers:
          - env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: KC_URL
              value: {{ sso_url }}/auth
            - name: KC_REALM_ID
              value: {{ sso_realm_id }}
            - name: KC_CLIENT_ID
              value: {{ tinspect_sso_clientId }}
            - name: SERVICE_URL
              value: {{ frontend_url }}
            imagePullPolicy: IfNotPresent
            name: {{ application_name }}
            ports:
            - containerPort: 8000
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /
                port: 8000
                scheme: HTTP
              initialDelaySeconds: 30
              periodSeconds: 30
              timeoutSeconds: 3
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /
                port: 8000
                scheme: HTTP
              initialDelaySeconds: 30
              periodSeconds: 30
              timeoutSeconds: 3
            resources:
              limits:
                cpu: '500m'
                memory: '500Mi'
              requests:
                cpu: '250m'
                memory: '250Mi'
            securityContext:
              privileged: false
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
            - {{ application_name }}
          from:
            kind: ImageStreamTag
            name: "{{ application_name }}:{{ service_image_tag }}"
        type: ImageChange

