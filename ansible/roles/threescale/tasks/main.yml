---

- name: set threescale facts
  set_fact:
    api_gw_url: "https://{{ apigw_hostname_subcontext }}.{{ ocp_domain }}"
    sso_confidential_realm_url: "https://sso-{{ namespace_sso }}.{{ ocp_domain }}"

- name: "copy 3scale related template files to {{ work_dir }}"
  template:
    src: "{{ item.src }}"
    dest: "{{ work_dir }}/{{ item.path }}"
  with_filetree: "{{ resources_dir }}"


########    Tenant    #############

- name: "tenant secret {{ tenant_name }}-admin-secret"
  oc_secret:
    oc_binary: "{{ openshift_cli }}"
    state: present
    namespace: "{{ apimanager_namespace }}"
    name: "{{ tenant_name }}-admin-secret"
    type: generic
    from_literal:
      admin_password: admin

#- name: "create tenant {{ tenant_name }}"
#  oc_obj:
#    state: present
#    oc_binary: "{{ openshift_cli }}"
#    namespace: "{{ apimanager_namespace }}"
#    name: "{{ tenant_name }}"
#    kind: tenant
#    files:
#      - "{{ work_dir }}/tenant.yml"

- name: "wait until {{ tenant_name }} tenant is up and running"
  shell: "{{ openshift_cli }} get tenant {{ tenant_name }} -o template --template={{ json_template }} -n {{ apimanager_namespace }}"
  vars:
    json_template: '\{\{.status.tenantId\}\}'
  register: result
  until: result.stdout | int >= 1
  retries: 10
  delay: 15
  changed_when: false


# NOTE:  access token is not available from tenant creation via operator  (it is however available when tenant created directly from master API)
#   Eguzki Lezaun; Mar 3, 2021
#
#   The Access Token info is only available at the response of the tenant. After that, the access token cannot be read, even with the master access token
#   So the operator cannot reconcilliate and be idempontent in case something goes wrong (cluster access error or 3scale API temporary error)
#   As an example, the operator creates the tenant and then tries to store the access token in a secret. The secret creation op fails
#   The operator cannot finish the reconciliation of the Tenant CRD with the recently created tenant. It would need to create another tenant and expect no error
#   The provider key, on the other hand, is available in the account info (actually is a little bit more complex, but for simplicity let's say it is in the account info)

###################################



########    backend    #############
- name: "create backend {{ backend_name }}"
  oc_obj:
    state: present
    oc_binary: "{{ openshift_cli }}"
    namespace: "{{ apimanager_namespace }}"
    name: "{{ backend_name }}"
    kind: backend
    files:
      - "{{ work_dir }}/backend.yml"

- name: "wait until {{ backend_name }} backend is up and running"
  shell: "{{ openshift_cli }} get backend {{ backend_name }} -o template --template={{ json_template }} -n {{ apimanager_namespace }}"
  vars:
    json_template: '\{\{.status.backendId\}\}'
  register: result
  until: result.stdout | int >= 1
  retries: 10
  delay: 10
  changed_when: false

###################################


########    product    #############
- name: "create product {{ api_product_name }}"
  oc_obj:
    state: present
    oc_binary: "{{ openshift_cli }}"
    namespace: "{{ apimanager_namespace }}"
    name: "{{ api_product_name }}"
    kind: product
    files:
      - "{{ work_dir }}/product.yml"

- name: "wait until {{ api_product_name }} product is up and running"
  shell: "{{ openshift_cli }} get product {{ api_product_name }} -o template --template={{ json_template }} -n {{ apimanager_namespace }}"
  vars:
    json_template: '\{\{.status.productId\}\}'
  register: result
  until: result.stdout | int >= 1
  retries: 10
  delay: 10
  changed_when: false

###################################
