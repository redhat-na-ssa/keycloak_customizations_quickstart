quarkus.swagger-ui.always-include=true

# Enable TRACE for OidcProvider client initialization errors:
quarkus.log.category."io.quarkus.oidc.runtime.OidcRecorder".level=TRACE
quarkus.log.category."io.quarkus.oidc.runtime.OidcRecorder".min-level=TRACE

# Enable TRACE for token verification errors:
quarkus.log.category."io.quarkus.oidc.runtime.OidcProvider".level=TRACE
quarkus.log.category."io.quarkus.oidc.runtime.OidcProvider".min-level=TRACE

# Enable TRACE for token verification errors:
quarkus.log.category."io.quarkus.oidc.runtime.OidcProvider".level=TRACE
quarkus.log.category."io.quarkus.oidc.runtime.OidcProvider".min-level=TRACE

# As a bearer-only service accepting a JWT formatted access token, all that is needed is reference to URL of the authorization service (that signed access token)
quarkus.oidc.auth-server-url={{ sso_realm_url }}
quarkus.oidc.credentials.jwt.issuer=${quarkus.oidc.auth-server-url}

quarkus.oidc.connection-delay=30S
quarkus.oidc.connection-retry-count=10

# https://quarkus.io/guides/security-openid-connect#how-to-use-client-id-property
quarkus.oidc.client-id=boidc

https://www.keycloak.org/docs/latest/server_admin/#audience-support
quarkus.oidc.token.audience=${quarkus.oidc.client-id}

quarkus.smallrye-openapi.oauth2-implicit-authorization-url=${quarkus.oidc.credentials.jwt.issuer}/protocol/openid-connect/auth

quarkus.kubernetes-config.enabled=true
quarkus.kubernetes-config.secrets.enabled=true


################    Reactive DB Connection Pool

quarkus.kubernetes-config.namespace={{ namespace_sso }}
quarkus.kubernetes-config.secrets={{ sso_db_service_name }}

quarkus.datasource."pgsso".username = ${username}
quarkus.datasource."pgsso".password = ${password}
quarkus.datasource."pgsso".reactive.url = postgresql://${host}.{{ namespace_sso }}:${port}/${database_name}
quarkus.datasource."pgsso".reactive.max-size = 2
quarkus.datasource."pgsso".reactive.idle-timeout=PT30M
